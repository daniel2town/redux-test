{"version":3,"sources":["logo.svg","containers/Task/constants.js","containers/Task/reducer.js","containers/Task/selectors.js","containers/Task/actions.js","containers/Task/components/form.js","containers/Task/components/userTask.js","containers/Task/index.js","App.js","reportWebVitals.js","reducers.js","utils/request.js","containers/Task/saga.js","sagas.js","configureStore.js","index.js"],"names":["DEFAULT_ACTION","CREATE_TASK","CREATE_TASK_SUCCESS","CREATE_TASK_FAILED","UPDATE_TASK","UPDATE_TASK_SUCCESS","UPDATE_TASK_FAILED","GET_TASK","GET_TASK_SUCCESS","GET_TASK_FAILED","DELETE_TASK","DELETE_TASK_SUCCESS","DELETE_TASK_FAILED","initialState","taskData","allTasks","creatingTaskSuccess","creatingTaskFailed","creatingTaskErrorMessage","updatingTaskSuccess","updatingTaskFailed","updatingTaskErrorMessage","gettingTaskSuccess","gettingTaskFailed","gettingTaskErrorMessage","deletingTaskSuccess","deletingTaskFailed","deletingTaskErrorMessage","taskReducer","state","action","produce","draft","type","response","error","selectTaskDomain","task","makeSelectTask","createSelector","substate","createTask","data","createTaskSuccess","createTaskFailed","updateTask","id","updateTaskSuccess","updateTaskFailed","getTaskSuccess","getTaskFailed","deleteTask","deleteTaskSuccess","deleteTaskFailed","format","Form","create","update","dispatch","handleClick","updateData","updating","remove","useForm","register","handleSubmit","setValue","useEffect","name","onChangeDate","date","dateString","onChangeTime","time","timeString","onSubmit","seconds","Date","moment","task_time","getTime","task_msg","description","task_date","assigned_user","console","log","style","color","float","fontSize","defaultValue","onChange","e","target","value","display","flexDirection","marginRight","marginTop","DeleteOutlined","onClick","marginBottom","backgroundColor","borderRadius","form","htmlType","userTask","infos","results","map","info","span","marginLeft","width","src","user_icon","title","icon","EditOutlined","mapStateToProps","createStructuredSelector","withConnect","connect","compose","props","useState","isMounted","setMount","isClicked","setClick","isUpdating","setIsUpdating","setUpdate","bool","defaultIndex","flex","textAlign","length","direction","h","orientation","margin","pb","App","className","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","parseJSON","status","json","checkStatus","Error","statusText","request","url","options","fetch","createTaskSaga","updateTaskSaga","getTaskSaga","deleteTaskSaga","watchAllSaga","taskSaga","accessToken","headers","method","Authorization","Accept","body","JSON","stringify","call","put","text","parse","requestURL","takeEvery","all","rootSaga","fork","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86055a2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/*\n *\n * Task constants\n *\n */\n\nexport const DEFAULT_ACTION = \"app/Task/DEFAULT_ACTION\";\n\nexport const CREATE_TASK = \"app/Task/CREATE_TASK\";\nexport const CREATE_TASK_SUCCESS = \"app/Task/CREATE_TASK_SUCCESS\";\nexport const CREATE_TASK_FAILED = \"app/Task/CREATE_TASK_FAILED\";\n\nexport const UPDATE_TASK = \"app/Task/UPDATE_TASK\";\nexport const UPDATE_TASK_SUCCESS = \"app/Task/UPDATE_TASK_SUCCESS\";\nexport const UPDATE_TASK_FAILED = \"app/Task/UPDATE_TASK_FAILED\";\n\nexport const GET_TASK = \"app/Task/GET_TASK\";\nexport const GET_TASK_SUCCESS = \"app/Task/GET_TASK_SUCCESS\";\nexport const GET_TASK_FAILED = \"app/Task/GET_TASK_FAILED\";\n\nexport const DELETE_TASK = \"app/Task/DELETE_TASK\";\nexport const DELETE_TASK_SUCCESS = \"app/Task/DELETE_TASK_SUCCESS\";\nexport const DELETE_TASK_FAILED = \"app/Task/DELETE_TASK_FAILED\";\n","/* eslint-disable default-case */\n// Imports: Dependencies\nimport produce from \"immer\";\n\nimport {\n  DEFAULT_ACTION,\n  CREATE_TASK,\n  CREATE_TASK_SUCCESS,\n  CREATE_TASK_FAILED,\n  UPDATE_TASK,\n  UPDATE_TASK_SUCCESS,\n  UPDATE_TASK_FAILED,\n  GET_TASK,\n  GET_TASK_SUCCESS,\n  GET_TASK_FAILED,\n  DELETE_TASK,\n  DELETE_TASK_SUCCESS,\n  DELETE_TASK_FAILED,\n} from \"./constants\";\n\nexport const initialState = {\n  taskData: null,\n  allTasks: null,\n  creatingTaskSuccess: false,\n  creatingTaskFailed: false,\n  creatingTaskErrorMessage: \"\",\n  updatingTaskSuccess: false,\n  updatingTaskFailed: false,\n  updatingTaskErrorMessage: \"\",\n  gettingTaskSuccess: false,\n  gettingTaskFailed: false,\n  gettingTaskErrorMessage: \"\",\n  deletingTaskSuccess: false,\n  deletingTaskFailed: false,\n  deletingTaskErrorMessage: \"\",\n};\n\nconst taskReducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case DEFAULT_ACTION:\n        break;\n      case CREATE_TASK:\n        draft.taskData = [];\n        draft.creatingTaskSuccess = false;\n        draft.creatingTaskFailed = false;\n        draft.creatingTaskErrorMessage = \"\";\n        break;\n      case CREATE_TASK_SUCCESS:\n        draft.taskData = action.response;\n        draft.creatingTaskSuccess = true;\n        draft.creatingTaskFailed = false;\n        draft.creatingTaskErrorMessage = \"\";\n        break;\n      case CREATE_TASK_FAILED:\n        draft.taskData = [];\n        draft.creatingTaskSuccess = false;\n        draft.creatingTaskFailed = true;\n        draft.creatingTaskErrorMessage = action.response.error;\n        break;\n      case UPDATE_TASK:\n        draft.taskData = [];\n        draft.updatingTaskSuccess = false;\n        draft.updatingTaskFailed = false;\n        draft.updatingTaskErrorMessage = \"\";\n        break;\n      case UPDATE_TASK_SUCCESS:\n        draft.taskData = action.response;\n        draft.updatingTaskSuccess = true;\n        draft.updatingTaskFailed = false;\n        draft.updatingTaskErrorMessage = \"\";\n        break;\n      case UPDATE_TASK_FAILED:\n        draft.taskData = [];\n        draft.updatingTaskSuccess = false;\n        draft.updatingTaskFailed = true;\n        draft.updatingTaskErrorMessage = action.response.error;\n        break;\n      case GET_TASK:\n        draft.gettingTaskSuccess = false;\n        draft.gettingTaskFailed = false;\n        draft.gettingTaskErrorMessage = \"\";\n        break;\n      case GET_TASK_SUCCESS:\n        draft.allTasks = action.response;\n        draft.gettingTaskSuccess = true;\n        draft.gettingTaskFailed = false;\n        draft.gettingTaskErrorMessage = \"\";\n        break;\n      case GET_TASK_FAILED:\n        draft.gettingTaskSuccess = false;\n        draft.gettingTaskFailed = true;\n        draft.gettingTaskErrorMessage = action.response.error;\n        break;\n      case DELETE_TASK:\n        draft.deletingTaskSuccess = false;\n        draft.deletingTaskFailed = false;\n        draft.deletingTaskErrorMessage = \"\";\n        break;\n      case DELETE_TASK_SUCCESS:\n        draft.taskData = action.response;\n        draft.deletingTaskSuccess = true;\n        draft.deletingTaskFailed = false;\n        draft.deletingTaskErrorMessage = \"\";\n        break;\n      case DELETE_TASK_FAILED:\n        draft.deletingTaskSuccess = false;\n        draft.deletingTaskFailed = true;\n        draft.deletingTaskErrorMessage = action.response.error;\n        break;\n    }\n  });\n\nexport default taskReducer;\n","import { createSelector } from \"reselect\";\nimport { initialState } from \"./reducer\";\n\n/**\n * Direct selector to the homePage state domain\n */\n\nconst selectTaskDomain = (state) => state.task || initialState;\n\n/**\n * Other specific selectors\n */\n\n/**\n * Default selector used by Task\n */\n\nconst makeSelectTask = () =>\n  createSelector(selectTaskDomain, (substate) => substate);\n\nexport default makeSelectTask;\nexport { selectTaskDomain };\n","/*\n *\n * Task actions\n *\n */\nimport {\n  DEFAULT_ACTION,\n  CREATE_TASK,\n  CREATE_TASK_SUCCESS,\n  CREATE_TASK_FAILED,\n  UPDATE_TASK,\n  UPDATE_TASK_SUCCESS,\n  UPDATE_TASK_FAILED,\n  GET_TASK,\n  GET_TASK_SUCCESS,\n  GET_TASK_FAILED,\n  DELETE_TASK,\n  DELETE_TASK_SUCCESS,\n  DELETE_TASK_FAILED,\n} from \"./constants\";\n\nexport function defaultAction() {\n  return {\n    type: DEFAULT_ACTION,\n  };\n}\n\nexport function createTask(data) {\n  return {\n    type: CREATE_TASK,\n    data,\n  };\n}\n\nexport function createTaskSuccess(response) {\n  return {\n    type: CREATE_TASK_SUCCESS,\n    response,\n  };\n}\n\nexport function createTaskFailed(response) {\n  return {\n    type: CREATE_TASK_FAILED,\n    response,\n  };\n}\n\nexport function updateTask(data, id) {\n  return {\n    type: UPDATE_TASK,\n    data,\n    id,\n  };\n}\n\nexport function updateTaskSuccess(response) {\n  return {\n    type: UPDATE_TASK_SUCCESS,\n    response,\n  };\n}\n\nexport function updateTaskFailed(response) {\n  return {\n    type: UPDATE_TASK_FAILED,\n    response,\n  };\n}\n\nexport function getTask(data) {\n  return {\n    type: GET_TASK,\n    data,\n  };\n}\n\nexport function getTaskSuccess(response) {\n  return {\n    type: GET_TASK_SUCCESS,\n    response,\n  };\n}\n\nexport function getTaskFailed(response) {\n  return {\n    type: GET_TASK_FAILED,\n    response,\n  };\n}\n\nexport function deleteTask(data) {\n  return {\n    type: DELETE_TASK,\n    data,\n  };\n}\n\nexport function deleteTaskSuccess(response) {\n  return {\n    type: DELETE_TASK_SUCCESS,\n    response,\n  };\n}\n\nexport function deleteTaskFailed(response) {\n  return {\n    type: DELETE_TASK_FAILED,\n    response,\n  };\n}\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, DatePicker, TimePicker, Button } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nimport moment from \"moment\";\n\nconst format = \"HH:mm\";\n\nconst Form = ({\n  create,\n  update,\n  dispatch,\n  handleClick,\n  updateData,\n  updating,\n  remove,\n}) => {\n  const { register, handleSubmit, setValue } = useForm();\n  const onSubmit = (data) => {\n    const seconds = new Date(\n      moment(data.time ? data.time : updateData.task_time, format)\n    ).getTime();\n\n    const taskData = {\n      task_msg: data.description ? data.description : updateData.task_msg,\n      task_date: data.date ? data.date : updateData.task_date,\n      task_time: seconds,\n      assigned_user: \"user_2e6297571fcb4e07ae724ef5a82a2353\",\n    };\n    console.log(taskData);\n\n    if (!updating) {\n      dispatch(create(taskData));\n      handleClick(\"save\", false);\n    } else {\n      dispatch(update(taskData, updateData.id));\n      handleClick(\"save\", false);\n    }\n  };\n\n  useEffect(() => {\n    register({ name: \"description\" });\n    register({ name: \"date\" });\n    register({ name: \"time\" });\n  }, []);\n\n  const onChangeDate = (date, dateString) => {\n    setValue(\"date\", dateString);\n  };\n\n  const onChangeTime = (time, timeString) => {\n    setValue(\"time\", timeString);\n  };\n\n  const handleDelete = (id) => {\n    handleClick(\"delete\", false);\n    dispatch(remove(id));\n  };\n\n  return (\n    <form id=\"myForm\" onSubmit={handleSubmit(onSubmit)}>\n      <p style={{ color: \"#000000\", float: \"left\", fontSize: 15 }}>\n        Task Description\n      </p>\n      {!updating ? (\n        <Input\n          name=\"description\"\n          onChange={(e) => setValue(\"description\", e.target.value)}\n        />\n      ) : (\n        <Input\n          name=\"description\"\n          defaultValue={updateData.task_msg}\n          onChange={(e) => setValue(\"description\", e.target.value)}\n        />\n      )}\n\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <p\n          style={{\n            color: \"#000000\",\n            float: \"left\",\n            fontSize: 15,\n            marginRight: 150,\n            marginTop: 10,\n          }}\n        >\n          Date\n        </p>\n        <p\n          style={{\n            color: \"#000000\",\n            float: \"left\",\n            fontSize: 15,\n            marginTop: 10,\n          }}\n        >\n          Time\n        </p>\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        {!updating ? (\n          <>\n            <DatePicker onChange={onChangeDate} style={{ marginRight: 50 }} />\n            <TimePicker onChange={onChangeTime} format={format} />\n          </>\n        ) : (\n          <>\n            <DatePicker\n              defaultValue={moment(updateData.task_date)}\n              onChange={onChangeDate}\n              style={{ marginRight: 50 }}\n            />\n            <TimePicker\n              defaultValue={moment(updateData.task_time)}\n              onChange={onChangeTime}\n              format={format}\n            />\n          </>\n        )}\n      </div>\n\n      {updating && (\n        <DeleteOutlined\n          style={{ float: \"left\", marginTop: 25, color: \"red\" }}\n          onClick={() => handleDelete(updateData.id)}\n        />\n      )}\n\n      <div style={{ float: \"right\", marginBottom: 20, marginTop: 20 }}>\n        <Button\n          style={{ color: \"grey\" }}\n          type=\"link\"\n          onClick={() => handleClick(\"cancel\", false)}\n        >\n          Cancel\n        </Button>\n        <Button\n          style={{\n            backgroundColor: \"#00BD79\",\n            borderRadius: 5,\n            color: \"white\",\n          }}\n          form=\"myForm\"\n          key=\"submit\"\n          htmlType=\"submit\"\n        >\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {};\n\nexport default Form;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Image, Button, Tooltip } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nimport moment from \"moment\";\n\nconst userTask = ({ data, handleClick }) => {\n  const infos = data && data.allTasks && data.allTasks.results;\n\n  return (\n    <>\n      <Row>\n        {infos &&\n          infos.map((info) => {\n            return (\n              <>\n                <Col span={8}>\n                  <Image\n                    style={{ marginLeft: -25 }}\n                    width={50}\n                    src={info.user_icon}\n                  />\n                </Col>\n                <Col span={8}>\n                  <p\n                    style={{\n                      color: \"#000000\",\n                      fontSize: 15,\n                      marginLeft: -130,\n                      marginTop: 0,\n                    }}\n                  >\n                    {info.task_msg}\n                  </p>\n                  <p\n                    style={{\n                      color: \"red\",\n                      fontSize: 10,\n                      marginLeft: -130,\n                      marginTop: 5,\n                    }}\n                  >\n                    {moment(info.task_date).format(\"l\")}\n                  </p>\n                </Col>\n                <Col span={8}>\n                  <Tooltip title=\"Edit Task\">\n                    <Button\n                      style={{ float: \"right\" }}\n                      icon={<EditOutlined />}\n                      onClick={() => handleClick(\"update\", true, info)}\n                    />\n                  </Tooltip>\n                </Col>\n              </>\n            );\n          })}\n      </Row>\n    </>\n  );\n};\n\nuserTask.propTypes = {};\n\nexport default userTask;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { compose } from \"redux\";\nimport makeSelectTask from \"./selectors\";\nimport { createTask, getTask, updateTask, deleteTask } from \"./actions\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  Box,\n  Divider,\n  Container,\n  Text,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { Tooltip } from \"antd\";\n\nimport Form from \"./components/form\";\nimport UserTask from \"./components/userTask\";\n\nexport const Task = (props) => {\n  const { dispatch, task } = props;\n\n  const info = task && task.allTasks && task.allTasks.results;\n\n  const [isMounted, setMount] = useState(false);\n  const [isClicked, setClick] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [updateData, setUpdate] = useState(\"\");\n\n  useEffect(() => {\n    if (!isMounted) {\n      dispatch(getTask());\n    }\n    setMount(true);\n  }, []);\n\n  const handleClick = (action, bool, data) => {\n    if (action === \"add\") {\n      setClick(bool);\n      setIsUpdating(false);\n    } else if (action === \"save\") {\n      setClick(bool);\n      setIsUpdating(false);\n    } else if (action === \"cancel\") {\n      setClick(bool);\n      setIsUpdating(false);\n    } else if (action === \"update\") {\n      setIsUpdating(true);\n      setUpdate(data);\n      setClick(bool);\n    } else if (action === \"delete\") {\n      setClick(bool);\n    }\n  };\n\n  return (\n    <Container style={{ width: 400 }}>\n      <Accordion\n        style={{ backgroundColor: \"white\", marginBottom: 50 }}\n        defaultIndex={0}\n      >\n        <AccordionItem style={{ backgroundColor: \"#E1F1FA\" }}>\n          <>\n            <AccordionButton style={{ backgroundColor: \"white\" }}>\n              <Box flex=\"1\" textAlign=\"left\">\n                <Text style={{ color: \"#000000\" }}>\n                  TASKS {info && info.length}\n                </Text>\n              </Box>\n              <Stack direction=\"row\" h=\"20px\">\n                <Divider\n                  orientation=\"vertical\"\n                  style={{ color: \"red\", marginRight: 10 }}\n                />\n                <Tooltip title=\"Add Task\">\n                  <AiOutlinePlus\n                    fontSize=\"18px\"\n                    style={{ color: \"#000000\", margin: \"auto\" }}\n                    onClick={() => handleClick(\"add\", true)}\n                  />\n                </Tooltip>\n              </Stack>\n            </AccordionButton>\n            <AccordionPanel pb={4}>\n              {isClicked ? (\n                <Form\n                  dispatch={dispatch}\n                  create={createTask}\n                  update={updateTask}\n                  remove={deleteTask}\n                  handleClick={handleClick}\n                  updateData={updateData}\n                  updating={isUpdating}\n                />\n              ) : (\n                <UserTask data={task} handleClick={handleClick} />\n              )}\n            </AccordionPanel>\n          </>\n        </AccordionItem>\n      </Accordion>\n    </Container>\n  );\n};\n\nTask.propTypes = {\n  createTask: PropTypes.func,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  task: makeSelectTask(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(Task);\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Task from \"./containers/Task\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Task />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Imports: Dependencies\nimport { combineReducers } from \"redux\";\n// Imports: Reducers\nimport taskReducer from \"./containers/Task/reducer\";\n\n// Redux: Root Reducer\nconst rootReducer = combineReducers({\n  task: taskReducer,\n});\n// Exports\nexport default rootReducer;\n","/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(url, options) {\n  return fetch(url, options).then(checkStatus).then(parseJSON);\n}\n","// Imports: Dependencies\nimport { call, takeEvery, put, all } from \"redux-saga/effects\";\nimport request from \"../../utils/request\";\n\nimport { CREATE_TASK, GET_TASK, UPDATE_TASK, DELETE_TASK } from \"./constants\";\nimport {\n  createTaskSuccess,\n  createTaskFailed,\n  getTaskSuccess,\n  getTaskFailed,\n  updateTaskSuccess,\n  updateTaskFailed,\n  deleteTaskSuccess,\n  deleteTaskFailed,\n} from \"./actions\";\n\nconst accessToken =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDg1MTczNTQsIm5iZiI6MTYwODUxNzM1NCwianRpIjoiMGQ4NWZiNDItYzJhMy00YzZlLTk5ZjMtZTA0MTU4MDlmNjY3IiwiaWRlbnRpdHkiOnsibmFtZSI6IlNhcmF2YW5hbiBUZXN0aW5nIiwiZW1haWwiOiJzcGljZWJsdWV0ZXN0MUBnbWFpbC5jb20iLCJ1c2VyX2lkIjoidXNlcl8yZTYyOTc1NzFmY2I0ZTA3YWU3MjRlZjVhODJhMjM1MyIsImNvbXBhbnlfaWQiOiJjb21wYW55XzMzZTU0MmIzNWNiYTRkZTA5MjBjNTBiZWRhMDg3OTMwIiwiaWNvbiI6Imh0dHA6Ly93d3cuZ3JhdmF0YXIuY29tL2F2YXRhci9hZGU1MjA3ZDViNDJjNWRhNTk1ZWRkNzgxODlkNzcxNz9kZWZhdWx0PWh0dHBzJTNBJTJGJTJGaGVsbG9tYWlsLWltYWdlcy5zMy1hcC1zb3V0aGVhc3QtMS5hbWF6b25hd3MuY29tJTJGc2xvb3ZpJTJGaW1hZ2VzJTJGYXZhdGFyLWRlZmF1bHQtaWNvbi5wbmciLCJieV9kZWZhdWx0Ijoib3V0cmVhY2gifSwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.8TMxUCVN1bltD2nSEONIB5r4_laOxFlgEKAGSUleaYI\";\n\nexport function* createTaskSaga(data) {\n  const requestURL =\n    \"https://stage.api.sloovi.com/task/lead_59a79b6cb211449f9698bad058a593e4\";\n  const headers = {\n    method: \"POST\",\n\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n\n    body: JSON.stringify(data.data),\n  };\n\n  try {\n    const response = yield call(request, requestURL, headers);\n    yield put(createTaskSuccess(response));\n    yield getTaskSaga();\n  } catch (err) {\n    yield put(createTaskFailed(JSON.parse(yield err.response.text())));\n  }\n}\n\nexport function* updateTaskSaga(data, id) {\n  const requestURL = `https://stage.api.sloovi.com/task/lead_59a79b6cb211449f9698bad058a593e4/${data.id}`;\n  const headers = {\n    method: \"PUT\",\n\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n\n    body: JSON.stringify(data.data),\n  };\n\n  try {\n    const response = yield call(request, requestURL, headers);\n    yield put(updateTaskSuccess(response));\n    yield getTaskSaga();\n  } catch (err) {\n    console.log(err);\n    yield put(updateTaskFailed(JSON.parse(yield err.response.text())));\n  }\n}\n\nexport function* getTaskSaga() {\n  const requestURL =\n    \"https://stage.api.sloovi.com/task/lead_59a79b6cb211449f9698bad058a593e4\";\n  const headers = {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const response = yield call(request, requestURL, headers);\n    yield put(getTaskSuccess(response));\n  } catch (err) {\n    yield put(getTaskFailed(JSON.parse(yield err.response.text())));\n  }\n}\n\nexport function* deleteTaskSaga(data) {\n  const requestURL = `https://stage.api.sloovi.com/task/lead_59a79b6cb211449f9698bad058a593e4/${data.data}`;\n  const headers = {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const response = yield call(request, requestURL, headers);\n    yield put(deleteTaskSuccess(response));\n    yield getTaskSaga();\n  } catch (err) {\n    yield put(deleteTaskFailed(JSON.parse(yield err.response.text())));\n  }\n}\n\nexport function* watchAllSaga() {\n  yield takeEvery(CREATE_TASK, createTaskSaga);\n  yield takeEvery(UPDATE_TASK, updateTaskSaga);\n  yield takeEvery(GET_TASK, getTaskSaga);\n  yield takeEvery(DELETE_TASK, deleteTaskSaga);\n}\n\nexport default function* taskSaga() {\n  yield all([watchAllSaga()]);\n}\n","// Imports: Dependencies\nimport { all, fork } from \"redux-saga/effects\";\nimport taskSaga from \"./containers/Task/saga\";\n\n// Redux Saga: Root Saga\nexport default function* rootSaga() {\n  yield all([fork(taskSaga)]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport \"regenerator-runtime/runtime\";\nimport rootReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\n// const composeEnhancers =\n//   typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n//     ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n//         // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n//       })\n//     : compose;\n\n// const enhancer = composeEnhancers(\n//   applyMiddleware(sagaMiddleware)\n//   // other store enhancers if any\n// );\n\n// export const store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./configureStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}